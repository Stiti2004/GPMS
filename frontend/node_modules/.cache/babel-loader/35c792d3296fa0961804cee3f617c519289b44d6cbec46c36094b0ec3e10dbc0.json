{"ast":null,"code":"var _jsxFileName = \"/workspaces/GPMS/frontend/src/components/PanchayatCensusData.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { motion } from 'framer-motion';\n// import { Link } from 'react-router-dom';\n\n// export default function CensusDataManagement() {\n//     const [censusData, setCensusData] = useState([]);\n//     const [newRecord, setNewRecord] = useState({ total_population: '', male_population: '', female_population: '', employment_rate: '', literacy_rate: '' });\n//     const [editingRecord, setEditingRecord] = useState(null);\n\n//     useEffect(() => {\n//         fetchCensusData();\n//     }, []);\n\n//     const fetchCensusData = async () => {\n//         try {\n//             const response = await fetch('/api/census-data');\n//             const data = await response.json();\n//             setCensusData(data);\n//         } catch (error) {\n//             console.error('Error fetching census data:', error);\n//         }\n//     };\n\n//     const handleDelete = async (id) => {\n//         if (window.confirm('Are you sure you want to delete this record?')) {\n//             try {\n//                 await fetch(`/api/census-data/${id}`, { method: 'DELETE' });\n//                 fetchCensusData();\n//             } catch (error) {\n//                 console.error('Error deleting record:', error);\n//             }\n//         }\n//     };\n\n//     const handleAdd = async () => {\n//         try {\n//             await fetch('/api/census-data', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(newRecord)\n//             });\n//             setNewRecord({ total_population: '', male_population: '', female_population: '', employment_rate: '', literacy_rate: '' });\n//             fetchCensusData();\n//         } catch (error) {\n//             console.error('Error adding record:', error);\n//         }\n//     };\n\n//     const handleEdit = (record) => {\n//         setEditingRecord(record);\n//     };\n\n//     const handleUpdate = async () => {\n//         try {\n//             await fetch(`/api/census-data/${editingRecord.id}`, {\n//                 method: 'PUT',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(editingRecord)\n//             });\n//             setEditingRecord(null);\n//             fetchCensusData();\n//         } catch (error) {\n//             console.error('Error updating record:', error);\n//         }\n//     };\n\n//     return (\n//         <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh', background: 'linear-gradient(135deg, #1e3c72, #2a5298)', fontFamily: 'Poppins, sans-serif', textAlign: 'center', padding: '20px' }}>\n//             <motion.div initial={{ opacity: 0, scale: 0.9 }} animate={{ opacity: 1, scale: 1 }} transition={{ duration: 0.5 }} style={{ background: '#fff', padding: '30px', borderRadius: '15px', boxShadow: '0px 15px 30px rgba(0, 0, 0, 0.3)', width: '90%', maxWidth: '800px' }}>\n//                 <h2 style={{ color: '#1e3c72', fontWeight: 'bold', marginBottom: '15px', fontSize: '1.8rem' }}>Census Data Management</h2>\n//                 <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//                     <thead>\n//                         <tr style={{ background: '#00509d', color: 'white' }}>\n//                             <th style={tableHeader}>Total Population</th>\n//                             <th style={tableHeader}>Male Population</th>\n//                             <th style={tableHeader}>Female Population</th>\n//                             <th style={tableHeader}>Employment Rate</th>\n//                             <th style={tableHeader}>Literacy Rate</th>\n//                             <th style={tableHeader}>Actions</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {censusData.map((record) => (\n//                             <tr key={record.id} style={{ background: '#f9f9f9' }}>\n//                                 <td style={tableCell}>{record.total_population}</td>\n//                                 <td style={tableCell}>{record.male_population}</td>\n//                                 <td style={tableCell}>{record.female_population}</td>\n//                                 <td style={tableCell}>{record.employment_rate}%</td>\n//                                 <td style={tableCell}>{record.literacy_rate}%</td>\n//                                 <td style={tableCell}>\n//                                     <button onClick={() => handleEdit(record)} style={editButton}>‚úè Edit</button>\n//                                     <button onClick={() => handleDelete(record.id)} style={deleteButton}>üóë Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//                 {editingRecord ? (\n//                     <div>\n//                         <h3>Edit Record</h3>\n//                         <input type=\"text\" placeholder=\"Total Population\" value={editingRecord.total_population} onChange={(e) => setEditingRecord({ ...editingRecord, total_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Male Population\" value={editingRecord.male_population} onChange={(e) => setEditingRecord({ ...editingRecord, male_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Female Population\" value={editingRecord.female_population} onChange={(e) => setEditingRecord({ ...editingRecord, female_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Employment Rate\" value={editingRecord.employment_rate} onChange={(e) => setEditingRecord({ ...editingRecord, employment_rate: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Literacy Rate\" value={editingRecord.literacy_rate} onChange={(e) => setEditingRecord({ ...editingRecord, literacy_rate: e.target.value })} />\n//                         <button onClick={handleUpdate} style={updateButton}>Update</button>\n//                     </div>\n//                 ) : (\n//                     <div>\n//                         <h3>Add Record</h3>\n//                         <input type=\"text\" placeholder=\"Total Population\" value={newRecord.total_population} onChange={(e) => setNewRecord({ ...newRecord, total_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Male Population\" value={newRecord.male_population} onChange={(e) => setNewRecord({ ...newRecord, male_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Female Population\" value={newRecord.female_population} onChange={(e) => setNewRecord({ ...newRecord, female_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Employment Rate\" value={newRecord.employment_rate} onChange={(e) => setNewRecord({ ...newRecord, employment_rate: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Literacy Rate\" value={newRecord.literacy_rate} onChange={(e) => setNewRecord({ ...newRecord, literacy_rate: e.target.value })} />\n//                         <button onClick={handleAdd} style={addButton}>Add</button>\n//                     </div>\n//                 )}\n//                 <Link to=\"/login/employee\" style={buttonStyle}>‚¨Ö Back to Dashboard</Link>\n//             </motion.div>\n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CensusDataManagement() {\n  _s();\n  const [censusData, setCensusData] = useState([]);\n  const [newRecord, setNewRecord] = useState({\n    total_population: '',\n    male_population: '',\n    female_population: '',\n    employment_rate: '',\n    literacy_rate: ''\n  });\n  const [editingRecord, setEditingRecord] = useState(null);\n  useEffect(() => {\n    fetchCensusData();\n  }, []);\n  const fetchCensusData = async () => {\n    try {\n      const response = await fetch('/api/census-data');\n      const data = await response.json();\n      setCensusData(data);\n    } catch (error) {\n      console.error('Error fetching census data:', error);\n    }\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this record?')) {\n      try {\n        await fetch(`/api/census-data/${id}`, {\n          method: 'DELETE'\n        });\n        fetchCensusData();\n      } catch (error) {\n        console.error('Error deleting record:', error);\n      }\n    }\n  };\n  const handleAdd = async () => {\n    try {\n      await fetch('/api/census-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newRecord)\n      });\n      setNewRecord({\n        total_population: '',\n        male_population: '',\n        female_population: '',\n        employment_rate: '',\n        literacy_rate: ''\n      });\n      fetchCensusData();\n    } catch (error) {\n      console.error('Error adding record:', error);\n    }\n  };\n  const handleEdit = record => {\n    setEditingRecord(record);\n  };\n  const handleUpdate = async () => {\n    try {\n      await fetch(`/api/census-data/${editingRecord.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(editingRecord)\n      });\n      setEditingRecord(null);\n      fetchCensusData();\n    } catch (error) {\n      console.error('Error updating record:', error);\n    }\n  };\n\n  // ‚úÖ Define missing styles\n  const tableHeader = {\n    padding: '10px',\n    borderBottom: '2px solid white',\n    textAlign: 'left'\n  };\n  const tableCell = {\n    padding: '10px',\n    borderBottom: '1px solid #ddd'\n  };\n  const buttonStyle = {\n    display: 'inline-block',\n    padding: '10px 20px',\n    margin: '10px',\n    textDecoration: 'none',\n    color: 'white',\n    backgroundColor: '#007BFF',\n    borderRadius: '5px',\n    textAlign: 'center'\n  };\n  const editButton = {\n    backgroundColor: '#FFC107',\n    border: 'none',\n    padding: '5px 10px',\n    margin: '5px',\n    cursor: 'pointer',\n    borderRadius: '5px'\n  };\n  const deleteButton = {\n    backgroundColor: '#DC3545',\n    border: 'none',\n    padding: '5px 10px',\n    margin: '5px',\n    cursor: 'pointer',\n    borderRadius: '5px',\n    color: 'white'\n  };\n  const updateButton = {\n    backgroundColor: '#28A745',\n    border: 'none',\n    padding: '8px 15px',\n    margin: '5px',\n    cursor: 'pointer',\n    borderRadius: '5px',\n    color: 'white'\n  };\n  const addButton = {\n    backgroundColor: '#17A2B8',\n    border: 'none',\n    padding: '8px 15px',\n    margin: '5px',\n    cursor: 'pointer',\n    borderRadius: '5px',\n    color: 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100vh',\n      background: 'linear-gradient(135deg, #1e3c72, #2a5298)',\n      fontFamily: 'Poppins, sans-serif',\n      textAlign: 'center',\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        scale: 0.9\n      },\n      animate: {\n        opacity: 1,\n        scale: 1\n      },\n      transition: {\n        duration: 0.5\n      },\n      style: {\n        background: '#fff',\n        padding: '30px',\n        borderRadius: '15px',\n        boxShadow: '0px 15px 30px rgba(0, 0, 0, 0.3)',\n        width: '90%',\n        maxWidth: '800px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#1e3c72',\n          fontWeight: 'bold',\n          marginBottom: '15px',\n          fontSize: '1.8rem'\n        },\n        children: \"Census Data Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              background: '#00509d',\n              color: 'white'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeader,\n              children: \"Total Population\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeader,\n              children: \"Male Population\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeader,\n              children: \"Female Population\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeader,\n              children: \"Employment Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeader,\n              children: \"Literacy Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: tableHeader,\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: censusData.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              background: '#f9f9f9'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCell,\n              children: record.total_population\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCell,\n              children: record.male_population\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCell,\n              children: record.female_population\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCell,\n              children: [record.employment_rate, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCell,\n              children: [record.literacy_rate, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tableCell,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(record),\n                style: editButton,\n                children: \"\\u270F Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(record.id),\n                style: deleteButton,\n                children: \"\\uD83D\\uDDD1 Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 33\n            }, this)]\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), editingRecord ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Total Population\",\n          value: editingRecord.total_population,\n          onChange: e => setEditingRecord({\n            ...editingRecord,\n            total_population: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Male Population\",\n          value: editingRecord.male_population,\n          onChange: e => setEditingRecord({\n            ...editingRecord,\n            male_population: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Female Population\",\n          value: editingRecord.female_population,\n          onChange: e => setEditingRecord({\n            ...editingRecord,\n            female_population: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Employment Rate\",\n          value: editingRecord.employment_rate,\n          onChange: e => setEditingRecord({\n            ...editingRecord,\n            employment_rate: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Literacy Rate\",\n          value: editingRecord.literacy_rate,\n          onChange: e => setEditingRecord({\n            ...editingRecord,\n            literacy_rate: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          style: updateButton,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Total Population\",\n          value: newRecord.total_population,\n          onChange: e => setNewRecord({\n            ...newRecord,\n            total_population: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Male Population\",\n          value: newRecord.male_population,\n          onChange: e => setNewRecord({\n            ...newRecord,\n            male_population: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Female Population\",\n          value: newRecord.female_population,\n          onChange: e => setNewRecord({\n            ...newRecord,\n            female_population: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAdd,\n          style: addButton,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login/employee\",\n        style: buttonStyle,\n        children: \"\\u2B05 Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 9\n  }, this);\n}\n_s(CensusDataManagement, \"Mh6v0eiOje1nHaw6Jp1yX4nmVqw=\");\n_c = CensusDataManagement;\nvar _c;\n$RefreshReg$(_c, \"CensusDataManagement\");","map":{"version":3,"names":["React","useEffect","useState","motion","Link","jsxDEV","_jsxDEV","CensusDataManagement","_s","censusData","setCensusData","newRecord","setNewRecord","total_population","male_population","female_population","employment_rate","literacy_rate","editingRecord","setEditingRecord","fetchCensusData","response","fetch","data","json","error","console","handleDelete","id","window","confirm","method","handleAdd","headers","body","JSON","stringify","handleEdit","record","handleUpdate","tableHeader","padding","borderBottom","textAlign","tableCell","buttonStyle","display","margin","textDecoration","color","backgroundColor","borderRadius","editButton","border","cursor","deleteButton","updateButton","addButton","style","flexDirection","alignItems","justifyContent","height","background","fontFamily","children","div","initial","opacity","scale","animate","transition","duration","boxShadow","width","maxWidth","fontWeight","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","borderCollapse","map","onClick","type","placeholder","value","onChange","e","target","to","_c","$RefreshReg$"],"sources":["/workspaces/GPMS/frontend/src/components/PanchayatCensusData.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { motion } from 'framer-motion';\n// import { Link } from 'react-router-dom';\n\n// export default function CensusDataManagement() {\n//     const [censusData, setCensusData] = useState([]);\n//     const [newRecord, setNewRecord] = useState({ total_population: '', male_population: '', female_population: '', employment_rate: '', literacy_rate: '' });\n//     const [editingRecord, setEditingRecord] = useState(null);\n\n//     useEffect(() => {\n//         fetchCensusData();\n//     }, []);\n\n//     const fetchCensusData = async () => {\n//         try {\n//             const response = await fetch('/api/census-data');\n//             const data = await response.json();\n//             setCensusData(data);\n//         } catch (error) {\n//             console.error('Error fetching census data:', error);\n//         }\n//     };\n\n//     const handleDelete = async (id) => {\n//         if (window.confirm('Are you sure you want to delete this record?')) {\n//             try {\n//                 await fetch(`/api/census-data/${id}`, { method: 'DELETE' });\n//                 fetchCensusData();\n//             } catch (error) {\n//                 console.error('Error deleting record:', error);\n//             }\n//         }\n//     };\n\n//     const handleAdd = async () => {\n//         try {\n//             await fetch('/api/census-data', {\n//                 method: 'POST',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(newRecord)\n//             });\n//             setNewRecord({ total_population: '', male_population: '', female_population: '', employment_rate: '', literacy_rate: '' });\n//             fetchCensusData();\n//         } catch (error) {\n//             console.error('Error adding record:', error);\n//         }\n//     };\n\n//     const handleEdit = (record) => {\n//         setEditingRecord(record);\n//     };\n\n//     const handleUpdate = async () => {\n//         try {\n//             await fetch(`/api/census-data/${editingRecord.id}`, {\n//                 method: 'PUT',\n//                 headers: { 'Content-Type': 'application/json' },\n//                 body: JSON.stringify(editingRecord)\n//             });\n//             setEditingRecord(null);\n//             fetchCensusData();\n//         } catch (error) {\n//             console.error('Error updating record:', error);\n//         }\n//     };\n\n//     return (\n//         <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh', background: 'linear-gradient(135deg, #1e3c72, #2a5298)', fontFamily: 'Poppins, sans-serif', textAlign: 'center', padding: '20px' }}>\n//             <motion.div initial={{ opacity: 0, scale: 0.9 }} animate={{ opacity: 1, scale: 1 }} transition={{ duration: 0.5 }} style={{ background: '#fff', padding: '30px', borderRadius: '15px', boxShadow: '0px 15px 30px rgba(0, 0, 0, 0.3)', width: '90%', maxWidth: '800px' }}>\n//                 <h2 style={{ color: '#1e3c72', fontWeight: 'bold', marginBottom: '15px', fontSize: '1.8rem' }}>Census Data Management</h2>\n//                 <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//                     <thead>\n//                         <tr style={{ background: '#00509d', color: 'white' }}>\n//                             <th style={tableHeader}>Total Population</th>\n//                             <th style={tableHeader}>Male Population</th>\n//                             <th style={tableHeader}>Female Population</th>\n//                             <th style={tableHeader}>Employment Rate</th>\n//                             <th style={tableHeader}>Literacy Rate</th>\n//                             <th style={tableHeader}>Actions</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {censusData.map((record) => (\n//                             <tr key={record.id} style={{ background: '#f9f9f9' }}>\n//                                 <td style={tableCell}>{record.total_population}</td>\n//                                 <td style={tableCell}>{record.male_population}</td>\n//                                 <td style={tableCell}>{record.female_population}</td>\n//                                 <td style={tableCell}>{record.employment_rate}%</td>\n//                                 <td style={tableCell}>{record.literacy_rate}%</td>\n//                                 <td style={tableCell}>\n//                                     <button onClick={() => handleEdit(record)} style={editButton}>‚úè Edit</button>\n//                                     <button onClick={() => handleDelete(record.id)} style={deleteButton}>üóë Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//                 {editingRecord ? (\n//                     <div>\n//                         <h3>Edit Record</h3>\n//                         <input type=\"text\" placeholder=\"Total Population\" value={editingRecord.total_population} onChange={(e) => setEditingRecord({ ...editingRecord, total_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Male Population\" value={editingRecord.male_population} onChange={(e) => setEditingRecord({ ...editingRecord, male_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Female Population\" value={editingRecord.female_population} onChange={(e) => setEditingRecord({ ...editingRecord, female_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Employment Rate\" value={editingRecord.employment_rate} onChange={(e) => setEditingRecord({ ...editingRecord, employment_rate: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Literacy Rate\" value={editingRecord.literacy_rate} onChange={(e) => setEditingRecord({ ...editingRecord, literacy_rate: e.target.value })} />\n//                         <button onClick={handleUpdate} style={updateButton}>Update</button>\n//                     </div>\n//                 ) : (\n//                     <div>\n//                         <h3>Add Record</h3>\n//                         <input type=\"text\" placeholder=\"Total Population\" value={newRecord.total_population} onChange={(e) => setNewRecord({ ...newRecord, total_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Male Population\" value={newRecord.male_population} onChange={(e) => setNewRecord({ ...newRecord, male_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Female Population\" value={newRecord.female_population} onChange={(e) => setNewRecord({ ...newRecord, female_population: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Employment Rate\" value={newRecord.employment_rate} onChange={(e) => setNewRecord({ ...newRecord, employment_rate: e.target.value })} />\n//                         <input type=\"text\" placeholder=\"Literacy Rate\" value={newRecord.literacy_rate} onChange={(e) => setNewRecord({ ...newRecord, literacy_rate: e.target.value })} />\n//                         <button onClick={handleAdd} style={addButton}>Add</button>\n//                     </div>\n//                 )}\n//                 <Link to=\"/login/employee\" style={buttonStyle}>‚¨Ö Back to Dashboard</Link>\n//             </motion.div>\n//         </div>\n//     );\n// }\n\n\nimport React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\n\nexport default function CensusDataManagement() {\n    const [censusData, setCensusData] = useState([]);\n    const [newRecord, setNewRecord] = useState({ total_population: '', male_population: '', female_population: '', employment_rate: '', literacy_rate: '' });\n    const [editingRecord, setEditingRecord] = useState(null);\n\n    useEffect(() => {\n        fetchCensusData();\n    }, []);\n\n    const fetchCensusData = async () => {\n        try {\n            const response = await fetch('/api/census-data');\n            const data = await response.json();\n            setCensusData(data);\n        } catch (error) {\n            console.error('Error fetching census data:', error);\n        }\n    };\n\n    const handleDelete = async (id) => {\n        if (window.confirm('Are you sure you want to delete this record?')) {\n            try {\n                await fetch(`/api/census-data/${id}`, { method: 'DELETE' });\n                fetchCensusData();\n            } catch (error) {\n                console.error('Error deleting record:', error);\n            }\n        }\n    };\n\n    const handleAdd = async () => {\n        try {\n            await fetch('/api/census-data', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(newRecord)\n            });\n            setNewRecord({ total_population: '', male_population: '', female_population: '', employment_rate: '', literacy_rate: '' });\n            fetchCensusData();\n        } catch (error) {\n            console.error('Error adding record:', error);\n        }\n    };\n\n    const handleEdit = (record) => {\n        setEditingRecord(record);\n    };\n\n    const handleUpdate = async () => {\n        try {\n            await fetch(`/api/census-data/${editingRecord.id}`, {\n                method: 'PUT',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(editingRecord)\n            });\n            setEditingRecord(null);\n            fetchCensusData();\n        } catch (error) {\n            console.error('Error updating record:', error);\n        }\n    };\n\n    // ‚úÖ Define missing styles\n    const tableHeader = {\n        padding: '10px',\n        borderBottom: '2px solid white',\n        textAlign: 'left'\n    };\n\n    const tableCell = {\n        padding: '10px',\n        borderBottom: '1px solid #ddd'\n    };\n\n    const buttonStyle = {\n        display: 'inline-block',\n        padding: '10px 20px',\n        margin: '10px',\n        textDecoration: 'none',\n        color: 'white',\n        backgroundColor: '#007BFF',\n        borderRadius: '5px',\n        textAlign: 'center'\n    };\n\n    const editButton = {\n        backgroundColor: '#FFC107',\n        border: 'none',\n        padding: '5px 10px',\n        margin: '5px',\n        cursor: 'pointer',\n        borderRadius: '5px'\n    };\n\n    const deleteButton = {\n        backgroundColor: '#DC3545',\n        border: 'none',\n        padding: '5px 10px',\n        margin: '5px',\n        cursor: 'pointer',\n        borderRadius: '5px',\n        color: 'white'\n    };\n\n    const updateButton = {\n        backgroundColor: '#28A745',\n        border: 'none',\n        padding: '8px 15px',\n        margin: '5px',\n        cursor: 'pointer',\n        borderRadius: '5px',\n        color: 'white'\n    };\n\n    const addButton = {\n        backgroundColor: '#17A2B8',\n        border: 'none',\n        padding: '8px 15px',\n        margin: '5px',\n        cursor: 'pointer',\n        borderRadius: '5px',\n        color: 'white'\n    };\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh', background: 'linear-gradient(135deg, #1e3c72, #2a5298)', fontFamily: 'Poppins, sans-serif', textAlign: 'center', padding: '20px' }}>\n            <motion.div initial={{ opacity: 0, scale: 0.9 }} animate={{ opacity: 1, scale: 1 }} transition={{ duration: 0.5 }} style={{ background: '#fff', padding: '30px', borderRadius: '15px', boxShadow: '0px 15px 30px rgba(0, 0, 0, 0.3)', width: '90%', maxWidth: '800px' }}>\n                <h2 style={{ color: '#1e3c72', fontWeight: 'bold', marginBottom: '15px', fontSize: '1.8rem' }}>Census Data Management</h2>\n                <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                    <thead>\n                        <tr style={{ background: '#00509d', color: 'white' }}>\n                            <th style={tableHeader}>Total Population</th>\n                            <th style={tableHeader}>Male Population</th>\n                            <th style={tableHeader}>Female Population</th>\n                            <th style={tableHeader}>Employment Rate</th>\n                            <th style={tableHeader}>Literacy Rate</th>\n                            <th style={tableHeader}>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {censusData.map((record) => (\n                            <tr key={record.id} style={{ background: '#f9f9f9' }}>\n                                <td style={tableCell}>{record.total_population}</td>\n                                <td style={tableCell}>{record.male_population}</td>\n                                <td style={tableCell}>{record.female_population}</td>\n                                <td style={tableCell}>{record.employment_rate}%</td>\n                                <td style={tableCell}>{record.literacy_rate}%</td>\n                                <td style={tableCell}>\n                                    <button onClick={() => handleEdit(record)} style={editButton}>‚úè Edit</button>\n                                    <button onClick={() => handleDelete(record.id)} style={deleteButton}>üóë Delete</button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                {editingRecord ? (\n                    <div>\n                        <h3>Edit Record</h3>\n                        <input type=\"text\" placeholder=\"Total Population\" value={editingRecord.total_population} onChange={(e) => setEditingRecord({ ...editingRecord, total_population: e.target.value })} />\n                        <input type=\"text\" placeholder=\"Male Population\" value={editingRecord.male_population} onChange={(e) => setEditingRecord({ ...editingRecord, male_population: e.target.value })} />\n                        <input type=\"text\" placeholder=\"Female Population\" value={editingRecord.female_population} onChange={(e) => setEditingRecord({ ...editingRecord, female_population: e.target.value })} />\n                        <input type=\"text\" placeholder=\"Employment Rate\" value={editingRecord.employment_rate} onChange={(e) => setEditingRecord({ ...editingRecord, employment_rate: e.target.value })} />\n                        <input type=\"text\" placeholder=\"Literacy Rate\" value={editingRecord.literacy_rate} onChange={(e) => setEditingRecord({ ...editingRecord, literacy_rate: e.target.value })} />\n                        <button onClick={handleUpdate} style={updateButton}>Update</button>\n                    </div>\n                ) : (\n                    <div>\n                        <h3>Add Record</h3>\n                        <input type=\"text\" placeholder=\"Total Population\" value={newRecord.total_population} onChange={(e) => setNewRecord({ ...newRecord, total_population: e.target.value })} />\n                        <input type=\"text\" placeholder=\"Male Population\" value={newRecord.male_population} onChange={(e) => setNewRecord({ ...newRecord, male_population: e.target.value })} />\n                        <input type=\"text\" placeholder=\"Female Population\" value={newRecord.female_population} onChange={(e) => setNewRecord({ ...newRecord, female_population: e.target.value })} />\n                        <button onClick={handleAdd} style={addButton}>Add</button>\n                    </div>\n                )}\n                <Link to=\"/login/employee\" style={buttonStyle}>‚¨Ö Back to Dashboard</Link>\n            </motion.div>\n        </div>\n    );\n}\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IAAEW,gBAAgB,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAEC,iBAAiB,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAEC,aAAa,EAAE;EAAG,CAAC,CAAC;EACxJ,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZmB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}